{"ast":null,"code":"var _jsxFileName = \"/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'reactstrap';\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/react';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = props => {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    async function getUsers() {\n      try {\n        fetch('/api/v2/users', {\n          headers: {\n            Authorization: props.token\n          }\n        }).then(res => {\n          props.setUserList(JSON.parse(res._bodyText).users);\n          setUsers(JSON.parse(res._bodyText).users.map(item => {\n            item.key = item.id;\n            return item;\n          }));\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n\n    getUsers();\n  }, []);\n\n  const handleNewUser = () => {\n    window.location = \"/users/create\";\n  };\n\n  const handleView = user => {\n    const userId = user.id;\n    window.location = `/users/${userId}/view`;\n  };\n\n  const handleEdit = user => {\n    const userId = user.id;\n    window.location = `/users/${userId}/edit`;\n  };\n\n  return jsx(\"div\", {\n    css: {\n      backgroundColor: '#fcf8e8',\n      height: \"100vh\",\n      width: '100vw',\n      padding: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, jsx(\"div\", {\n    css: {\n      padding: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, jsx(\"h3\", {\n    css: {\n      color: '#df7861',\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"User Table\"), jsx(Button, {\n    onClick: handleNewUser,\n    outline: true,\n    css: {\n      display: 'inline',\n      float: 'right',\n      color: '#df7861'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Create a new user\")), jsx(Table, {\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"ID\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Email\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Jobs Count\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"Active\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))), jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, users.map(item => {\n    return jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, item.id), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, item.email), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, item.jobs_count), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, item.active.toString()), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      color: \"link\",\n      onClick: item => {\n        handleView(item);\n        console.log(item);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, \"View\")), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, jsx(Button, {\n      color: \"link\",\n      onClick: item => handleEdit(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, \"Edit\")));\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userToken: state.authReducer.token,\n    userList: state.userReducer.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUserList: data => dispatch({\n      type: actionType.USERLIST,\n      users: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","map":{"version":3,"sources":["/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx"],"names":["React","useState","useEffect","Link","connect","Table","Button","jsx","actionType","UsersList","props","users","setUsers","getUsers","fetch","headers","Authorization","token","then","res","setUserList","JSON","parse","_bodyText","map","item","key","id","ex","console","log","handleNewUser","window","location","handleView","user","userId","handleEdit","backgroundColor","height","width","padding","color","display","float","email","jobs_count","active","toString","mapStateToProps","state","userToken","authReducer","userList","userReducer","mapDispatchToProps","dispatch","data","type","USERLIST"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'reactstrap';\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = (props) => {\n    const [users, setUsers] = useState([]);\n    useEffect(() => {\n        async function getUsers(){\n            try {\n                fetch('/api/v2/users', {\n                    headers: {\n                      Authorization: props.token,\n                    }\n                })\n                .then(\n                    (res) => {\n                        props.setUserList(JSON.parse(res._bodyText).users);\n                        setUsers(JSON.parse(res._bodyText).users.map(\n                            item => {\n                                item.key = item.id;\n                                return item\n                            }\n                        ));\n                    }\n                )\n            }\n            catch (ex) {\n                console.log(ex);\n            }\n        }\n        getUsers();\n    }, []);\n\n    const handleNewUser = () => {\n        window.location = \"/users/create\";\n    }\n\n    const handleView = (user) => {\n        const userId = user.id;\n        window.location = `/users/${userId}/view`;\n    }\n\n    const handleEdit = (user) => {\n        const userId = user.id;\n        window.location = `/users/${userId}/edit`;\n    }\n\n\n    return (\n        <div\n            css={{\n                backgroundColor:'#fcf8e8',\n                height: \"100vh\",\n                width: '100vw',\n                padding: '50px'\n            }}\n        >\n            <div css={{padding:'20px'}}>\n                <h3 css={{color: '#df7861', display: 'inline'}}>User Table</h3>\n                <Button \n                    onClick={handleNewUser}\n                    outline\n                    css={{\n                        display: 'inline',\n                        float: 'right',\n                        color: '#df7861'\n                    }}\n                >Create a new user</Button>\n            </div>\n            <Table bordered hover>\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>Email</th>\n                    <th>Jobs Count</th>\n                    <th>Active</th>\n                    <th></th>\n                    <th></th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {users.map((item) => {\n                    return (\n                        <tr>\n                            <td>{item.id}</td>\n                            <td>{item.email}</td>\n                            <td>{item.jobs_count}</td>\n                            <td>{item.active.toString()}</td>\n                            <td><Button color='link' onClick={(item) => {\n                                handleView(item);\n                                console.log(item)\n                            }}>View</Button></td>\n                            <td><Button color='link' onClick={(item) => handleEdit(item)}>Edit</Button></td>\n                            {/* <td><Button color='link' onClick={(item) => handleDelete(item)}>Delete</Button></td> */}\n                        </tr>\n                    )\n                })}\n                </tbody>\n            </Table>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n      userToken: state.authReducer.token,\n      userList: state.userReducer.users\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserList: (data) => dispatch({type: actionType.USERLIST, users:data})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n\n"]},"metadata":{},"sourceType":"module"}