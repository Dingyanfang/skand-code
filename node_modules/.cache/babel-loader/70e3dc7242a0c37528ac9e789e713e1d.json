{"ast":null,"code":"var _jsxFileName = \"/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'reactstrap';\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/react';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = props => {\n  const [users, setUsers] = useState([]);\n  const history = useHistory();\n  console.log(props.token);\n  useEffect(() => {\n    async function getUsers() {\n      //console.log(props.token);\n      try {\n        fetch('/api/v2/users', {\n          method: 'GET',\n          headers: {\n            authorization: props.token\n          }\n        }).then(res => {\n          props.setUserList(JSON.parse(res._bodyText).users);\n          setUsers(JSON.parse(res._bodyText).users.map(item => {\n            item.key = item.id;\n            return item;\n          }));\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n\n    getUsers();\n  }, []);\n\n  const handleNewUser = () => {\n    history.push(\"/users/create\");\n  };\n\n  const handleView = user => {\n    const userId = user.id;\n    history.push(`/users/${userId}/view`);\n  };\n\n  const handleEdit = user => {\n    const userId = user.id;\n    history.push(`/users/${userId}/edit`);\n  };\n\n  return jsx(\"div\", {\n    css: {\n      backgroundColor: '#fcf8e8',\n      height: \"100vh\",\n      width: '100vw',\n      padding: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.token === '' ? jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 18\n    }\n  }, jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Please login first.\"), jsx(Button, {\n    color: \"secondary\",\n    onClick: () => history.push(`/login`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Login\")) : jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 18\n    }\n  }, jsx(\"div\", {\n    css: {\n      paddingBottom: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, jsx(\"h3\", {\n    css: {\n      color: '#df7861',\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"User Table\"), jsx(Button, {\n    onClick: handleNewUser,\n    outline: true,\n    css: {\n      display: 'inline',\n      float: 'right',\n      color: '#df7861'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"Create a new user\")), jsx(Table, {\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"ID\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Email\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, \"Jobs Count\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Active\"), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }), jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }))), jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, users.map(item => {\n    return jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, item.id), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, item.email), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, item.jobs_count), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, item.active.toString()), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }, jsx(Button, {\n      color: \"link\",\n      onClick: () => handleView(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, \"View\")), jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    }, jsx(Button, {\n      color: \"link\",\n      onClick: () => handleEdit(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 41\n      }\n    }, \"Edit\")));\n  }))), \")\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUserList: data => dispatch({\n      type: actionType.USERLIST,\n      users: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","map":{"version":3,"sources":["/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx"],"names":["React","useState","useEffect","useHistory","Link","connect","Table","Button","jsx","actionType","UsersList","props","users","setUsers","history","console","log","token","getUsers","fetch","method","headers","authorization","then","res","setUserList","JSON","parse","_bodyText","map","item","key","id","ex","handleNewUser","push","handleView","user","userId","handleEdit","backgroundColor","height","width","padding","paddingBottom","color","display","float","email","jobs_count","active","toString","mapStateToProps","state","authReducer","mapDispatchToProps","dispatch","data","type","USERLIST"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Button } from 'reactstrap';\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = (props) => {\n    const [users, setUsers] = useState([]);\n    const history = useHistory();\n    console.log(props.token);\n    useEffect(() => {\n        async function getUsers(){\n            //console.log(props.token);\n            try {\n                fetch('/api/v2/users', {\n                    method: 'GET',\n                    headers: {\n                        authorization: props.token,\n                    }\n                })\n                .then(\n                    (res) => {\n                        props.setUserList(JSON.parse(res._bodyText).users);\n                        setUsers(JSON.parse(res._bodyText).users.map(\n                            item => {\n                                item.key = item.id;\n                                return item\n                            }\n                        ));\n                    }\n                )\n            }\n            catch (ex) {\n                console.log(ex);\n            }\n        }\n        getUsers();\n    }, []);\n\n    const handleNewUser = () => {\n        history.push(\"/users/create\");\n    }\n\n    const handleView = (user) => {\n        const userId = user.id;\n        history.push(`/users/${userId}/view`);\n    }\n\n    const handleEdit = (user) => {\n        const userId = user.id;\n        history.push(`/users/${userId}/edit`);\n    }\n\n\n\n    return (\n        <div\n            css={{\n                backgroundColor:'#fcf8e8',\n                height: \"100vh\",\n                width: '100vw',\n                padding: '50px'\n            }}\n        >\n            {props.token === '' ? \n                \n                (<div>\n                    <p>Please login first.</p>\n                    <Button color=\"secondary\" onClick={()=> history.push(`/login`)}>Login</Button>\n                </div>\n                ):\n                (<div>\n                    <div css={{paddingBottom:'20px'}}>\n                        <h3 css={{color: '#df7861', display: 'inline'}}>User Table</h3>\n                        <Button \n                            onClick={handleNewUser}\n                            outline\n                            css={{\n                                display: 'inline',\n                                float: 'right',\n                                color: '#df7861'\n                            }}\n                        >Create a new user</Button>\n                    </div>\n                    <Table bordered hover>\n                        <thead>\n                            <tr>\n                            <th>ID</th>\n                            <th>Email</th>\n                            <th>Jobs Count</th>\n                            <th>Active</th>\n                            <th></th>\n                            <th></th>\n                            <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {users.map((item) => {\n                            return (\n                                <tr>\n                                    <td>{item.id}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.jobs_count}</td>\n                                    <td>{item.active.toString()}</td>\n                                    <td><Button color='link' onClick={() => handleView(item)}>View</Button></td>\n                                    <td><Button color='link' onClick={() => handleEdit(item)}>Edit</Button></td>\n                                    {/* <td><Button color='link' onClick={(item) => handleDelete(item)}>Delete</Button></td> */}\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </Table>)\n                </div>)\n            }\n            \n        </div>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n      token: state.authReducer.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserList: (data) => dispatch({type: actionType.USERLIST, users:data})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);\n\n"]},"metadata":{},"sourceType":"module"}