{"ast":null,"code":"var _jsxFileName = \"/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UserView.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n/** @jsx jsx */\n\nimport { jsx } from '@emotion/react';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport * as actionType from '../../store/actions';\n\nconst UserView = props => {\n  const currentUserId = useParams().id;\n  const [userData, setUserDate] = useState({});\n  const history = useHistory();\n  useEffect(() => {\n    async function getSingleUser() {\n      try {\n        await fetch(`/api/v2/users/${currentUserId}`, {\n          headers: {\n            method: 'GET',\n            authorization: '123abc456def789ghi' //props.token,\n\n          }\n        }).then(res => {\n          setUserDate(JSON.parse(res._bodyInit).users); //console.log(JSON.parse(res._bodyInit).users)\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n\n    getSingleUser();\n  }, []);\n  return jsx(\"div\", {\n    css: {\n      backgroundColor: '#fcf8e8',\n      height: \"100vh\",\n      width: '100vw',\n      padding: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.token === '' ? jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Please login first.\"), jsx(Button, {\n    color: \"secondary\",\n    onClick: () => history.push(`/login`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Login\")) : jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, jsx(\"h3\", {\n    css: {\n      color: '#df7861'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Single User details\"), jsx(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, jsx(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"id: \", userData.id), jsx(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"Email: \", userData.email), jsx(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"Job count: \", userData.jobs_count), jsx(ListGroupItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"Active: \", userData.active ? 'True' : 'False'))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    userId: state.userReducer.currentUserId\n  };\n};\n\nexport default connect(mapStateToProps)(UserView);","map":{"version":3,"sources":["/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UserView.jsx"],"names":["React","useEffect","useState","useParams","useHistory","connect","jsx","ListGroup","ListGroupItem","Button","actionType","UserView","props","currentUserId","id","userData","setUserDate","history","getSingleUser","fetch","headers","method","authorization","then","res","JSON","parse","_bodyInit","users","ex","console","log","backgroundColor","height","width","padding","token","push","color","email","jobs_count","active","mapStateToProps","state","authReducer","userId","userReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux';\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport * as actionType from '../../store/actions';\n\nconst UserView = (props) => {\n    const currentUserId = useParams().id;\n    const [userData, setUserDate] = useState({}); \n    const history = useHistory();\n\n    useEffect(() => {\n        async function getSingleUser(){\n            try {\n                await fetch(`/api/v2/users/${currentUserId}`, {\n                    headers: {\n                        method:'GET',\n                        authorization: '123abc456def789ghi'\n                        //props.token,\n                    }\n                })\n                .then(\n                    (res) => {\n                        setUserDate(JSON.parse(res._bodyInit).users);\n                        //console.log(JSON.parse(res._bodyInit).users)\n                    }\n                )\n            }\n            catch (ex) {\n                console.log(ex);\n            }\n        }\n        getSingleUser();\n    }, []);\n\n\n    return (\n        <div\n            css={{\n                backgroundColor:'#fcf8e8',\n                height: \"100vh\",\n                width: '100vw',\n                padding: '50px'\n            }}\n        >\n            {props.token === '' ?\n                (\n                    <div>\n                    <p>Please login first.</p>\n                    <Button color=\"secondary\" onClick={()=> history.push(`/login`)}>Login</Button>\n                </div>\n                ) :\n                (\n                    <div>\n                        <h3 css={{color: '#df7861'}}>Single User details</h3>\n                        <ListGroup>\n                            <ListGroupItem>id: {userData.id}</ListGroupItem>\n                            <ListGroupItem>Email: {userData.email}</ListGroupItem>\n                            <ListGroupItem>Job count: {userData.jobs_count}</ListGroupItem>\n                            <ListGroupItem>Active: {userData.active ? 'True' : 'False'}</ListGroupItem>\n                        </ListGroup>\n                    </div>\n                )\n            }\n            \n        </div>\n    )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n      token: state.authReducer.token,\n      userId: state.userReducer.currentUserId\n    }\n  }\n\n\n\nexport default connect(mapStateToProps)(UserView);\n"]},"metadata":{},"sourceType":"module"}