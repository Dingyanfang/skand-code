{"ast":null,"code":"var _jsxFileName = \"/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = props => {\n  //const [users, setUsers] = useState([]);\n  useEffect(() => {\n    async function getUsers() {\n      try {\n        fetch('/api/v2/users', {\n          headers: {\n            Authorization: props.token\n          }\n        }).then(res => {\n          props.setUserList(JSON.parse(res._bodyText).users);\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    }\n\n    getUsers();\n  }, []);\n  console.log(props.userList); // const userRow = (props.userList) => {\n  // }\n\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Jobs Count\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    userToken: state.authReducer.token,\n    userList: state.userReducer.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUserList: data => dispatch({\n      type: actionType.USERLIST,\n      users: data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","map":{"version":3,"sources":["/Users/iris/Desktop/skand.frontend-tasks/src/containers/user/UsersList.jsx"],"names":["React","useState","useEffect","connect","Table","actionType","UsersList","props","getUsers","fetch","headers","Authorization","token","then","res","setUserList","JSON","parse","_bodyText","users","ex","console","log","userList","mapStateToProps","state","userToken","authReducer","userReducer","mapDispatchToProps","dispatch","data","type","USERLIST"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,KAAKC,UAAZ,MAA4B,qBAA5B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB;AACAL,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeM,QAAf,GAAyB;AACrB,UAAI;AACAC,QAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAEJ,KAAK,CAACK;AADd;AADU,SAAlB,CAAL,CAKCC,IALD,CAMKC,GAAD,IAAS;AACLP,UAAAA,KAAK,CAACQ,WAAN,CAAkBC,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,SAAf,EAA0BC,KAA5C;AACH,SARL;AAUH,OAXD,CAYA,OAAOC,EAAP,EAAW;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACH;AACJ;;AACDZ,IAAAA,QAAQ;AACX,GAnBQ,EAmBN,EAnBM,CAAT;AAoBAa,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,QAAlB,EAtByB,CAuBzB;AAEA;;AAEA,sBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADJ,CADJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADJ;AAmBH,CA9CD;;AAgDA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACE,WAAN,CAAkBf,KADxB;AAELW,IAAAA,QAAQ,EAAEE,KAAK,CAACG,WAAN,CAAkBT;AAFvB,GAAP;AAID,CALH;;AAOA,MAAMU,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHf,IAAAA,WAAW,EAAGgB,IAAD,IAAUD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE3B,UAAU,CAAC4B,QAAlB;AAA4Bd,MAAAA,KAAK,EAACY;AAAlC,KAAD;AAD5B,GAAP;AAGH,CAJD;;AAMA,eAAe5B,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { Table } from 'reactstrap';\nimport * as actionType from '../../store/actions';\n\nconst UsersList = (props) => {\n    //const [users, setUsers] = useState([]);\n    useEffect(() => {\n        async function getUsers(){\n            try {\n                fetch('/api/v2/users', {\n                    headers: {\n                      Authorization: props.token,\n                    }\n                })\n                .then(\n                    (res) => {\n                        props.setUserList(JSON.parse(res._bodyText).users);\n                    }\n                )\n            }\n            catch (ex) {\n                console.log(ex);\n            }\n        }\n        getUsers();\n    }, []);\n    console.log(props.userList);\n    // const userRow = (props.userList) => {\n\n    // }\n\n    return (\n        <Table>\n            <thead>\n                <tr>\n                <th>ID</th>\n                <th>Email</th>\n                <th>Jobs Count</th>\n                <th>Active</th>\n                <th></th>\n                <th></th>\n                <th></th>\n                </tr>\n            </thead>\n            <tbody>\n        \n            </tbody>\n        </Table>\n    )\n\n}\n\nconst mapStateToProps = state => {\n    return {\n      userToken: state.authReducer.token,\n      userList: state.userReducer.users\n    }\n  }\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserList: (data) => dispatch({type: actionType.USERLIST, users:data})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);"]},"metadata":{},"sourceType":"module"}